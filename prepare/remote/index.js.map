{"version":3,"sources":["/webpack/bootstrap","../src/utils/fs.ts","../src/utils/io.ts","../src/prepare/setup/MonitorTools/Netdata.ts","../src/prepare/setup/Timezone.ts","../src/prepare/setup/Nginx.ts","../src/prepare/setup/MonitorTools/Journalbeat.ts","../external \"os\"","../src/prepare/index.ts","../external \"child_process\"","../src/prepare/setup/MonitoringTools.ts","../src/prepare/setup/MonitorTools/FailureNotificationServices.ts","../src/prepare/setup/aptDependencies.ts","../src/prepare/setup/MonitorTools/PersistentJournal.ts","../src/utils/printOSInfo.ts","../src/utils/spawn.ts","../src/prepare/setup/Security.ts","../src/prepare/setup/basicServer.ts","../node_modules/@actions/core/lib/command.js","../src/prepare/setup/MainServiceFiles.ts","../src/prepare/setup/readAvenConfig.ts","../node_modules/@actions/core/lib/core.js","../external \"path\"","../external \"util\"","../src/prepare/setup/Root.ts","../external \"fs\"","../src/utils/User.ts","../src/utils/isGitHubAction.ts","../src/prepare/setup/MonitorTools/Cockpit.ts","/webpack/runtime/node module decorator"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","threw","modules","call","ab","__dirname","startup","runtime","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","ensureLinkIs","ensureFilesAre","ensureFileIs","ensureFileContains","exists","mkdir","copyFile","chmod","chown","unlink","fs_1","io_1","args","path","debug","promises","src","dest","dir","options","mode","assign","recursive","filePath","access","filename","contents","current","readFile","catch","toString","includes","length","writeFile","list","all","map","target","readlink","code","undefined","symlink","verbosityLevel","input","core_1","isGitHubAction_1","util_1","name","isGitHubAction","Error","getInput","info","formatWithOptions","colors","process","env","DEBUG","console","log","raw","level","parseInt","isFinite","RangeError","setupNetdata","spawn_1","installScriptStable","exec","setupTimezone","readAvenConfig_1","runtimeServerTimezone","readAvenConfig","setupNginx","aptDependencies_1","addAptDependencies","certbotWebrootPath","letsencryptLive","nginxConf","setupNginxSnips","snips","letsencrypt","entries","config","setupNginxConfigs","domains","keys","public","private","existing","conf","basic","gzip","logging","validForwardedHeaderPattern","servers","ssl","setupNginxBasicServers","serverConfigDefault","setupNginxServersFull","webRootPath","service","serviceName","upstreamUniqueName","replace","socketFilename","workingDir","upstreamHost","serverConfig","join","nginxConfigFile","setupNginxBasic","certbotCliConfig","certbotPostRenewNginx","setupCertbot","outputFile","certbotPostRenewExampleFullChain","doCertbot","spawn","reduce","res","concat","setTimeout","hook","checkNginxConfig","domain","setupJournalbeat","journalbeat","disableLogging","reload","journalbeatConfig","kibanaHost","configured","elastic","hosts","JSON","stringify","username","password","logstashHosts","change","require","prepare","Nginx_1","MainServiceFiles_1","MonitoringTools_1","basicServer_1","printOSInfo_1","printOSInfo","basicServerSetup","setupMonitoringTools","setupMainServiceFiles","parent","exitCode","Journalbeat_1","Netdata_1","Cockpit_1","FailureNotificationServices_1","PersistentJournal_1","setupCockpit","setupFailureNotificationService","setupPersistentJournal","setupAptDependencies","deps","dependencies","push","_a","_b","aptDependencies","runtimeAptDependencies","useNew","dpkgForceConfOptions","stdio","DEBIAN_FRONTEND","Set","release","osVersion","split","child_process_1","defaultShell","command","first","defOpts","opts","unshift","shell","proc","ret","on","child","execP","promisify","setupSecurity","changed","Timezone_1","Security_1","Root_1","c","authorizedKeys","setAuthorizedKeys","__importStar","mod","__esModule","k","hasOwnProperty","os","issueCommand","properties","message","cmd","Command","stdout","write","EOL","issue","CMD_STRING","[object Object]","cmdStr","key","val","escapeProperty","escapeData","toCommandValue","String","s","serviceDescription","description","startServerCommand","extraService","extraConfigs","serviceFile","HomeDir","runtimeUser","runtimeUid","runtimeGid","dir1","dir2","dir3","Number","serviceFileContents","enable","error","data","stdin","d","timeout","clearTimeout","parsed","parse","command_1","ExitCode","exportVariable","convertedVal","setSecret","secret","addPath","inputPath","delimiter","toUpperCase","required","trim","setOutput","setCommandEcho","enabled","setFailed","Failure","isDebug","warning","startGroup","endGroup","group","fn","saveState","getState","setupRoot","User_1","path_1","user","userDir","userHome","sshConfDir","sources","fixKnownHosts","ensureKey","createAndConfigureUser","userGroups","UsernameInUseUserAddExitValue","home","GitHubKnownHosts","GITHUB_ACTIONS","argv","nmd","paths","children","enumerable","get"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t__webpack_require__.ab = __dirname + \"/\";\n\n \t// the startup function\n \tfunction startup() {\n \t\t// Load entry module and return exports\n \t\treturn __webpack_require__(96);\n \t};\n \t// initialize runtime\n \truntime(__webpack_require__);\n\n \t// run startup\n \treturn startup();\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureLinkIs = exports.ensureFilesAre = exports.ensureFileIs = exports.ensureFileContains = exports.exists = exports.mkdir = exports.copyFile = exports.chmod = exports.chown = exports.unlink = void 0;\nconst fs_1 = require(\"fs\");\nconst io_1 = require(\"./io\");\nfunction unlink(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [path] = args;\n        io_1.debug('unlink:', path);\n        yield fs_1.promises.unlink(...args);\n    });\n}\nexports.unlink = unlink;\nfunction chown(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [path, value] = args;\n        io_1.debug('chown:', path, 'to', value);\n        yield fs_1.promises.chown(...args);\n    });\n}\nexports.chown = chown;\nfunction chmod(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [path, value] = args;\n        io_1.debug('chmod:', path, 'to', value);\n        yield fs_1.promises.chmod(...args);\n    });\n}\nexports.chmod = chmod;\nfunction copyFile(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [src, dest] = args;\n        io_1.debug('copyFile:', src, 'to', dest);\n        yield fs_1.promises.copyFile(...args);\n    });\n}\nexports.copyFile = copyFile;\nfunction mkdir(dir, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof options !== 'object') {\n            options = { mode: options };\n        }\n        options = Object.assign({ recursive: true }, options);\n        io_1.debug('mkdir:', dir);\n        yield fs_1.promises.mkdir(dir, options);\n    });\n}\nexports.mkdir = mkdir;\nfunction exists(filePath) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return fs_1.promises.access(filePath).then(() => true, () => false);\n    });\n}\nexports.exists = exists;\nfunction ensureFileContains(filename, contents) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const current = (yield fs_1.promises.readFile(filename).catch(() => '')).toString();\n        if (current.includes(contents))\n            return false;\n        io_1.debug('Appending to file:', filename, 'bytes:', contents.length);\n        yield fs_1.promises.writeFile(filename, current + contents);\n        return true;\n    });\n}\nexports.ensureFileContains = ensureFileContains;\nfunction ensureFileIs(filename, contents, mode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // We could just skip the read part of this but this preserves modification times\n        const current = (yield fs_1.promises.readFile(filename).catch(() => '')).toString();\n        if (current === contents)\n            return false;\n        io_1.debug('Writing to file:', filename, 'bytes:', contents.length);\n        yield fs_1.promises.writeFile(filename, contents, { mode });\n        return true;\n    });\n}\nexports.ensureFileIs = ensureFileIs;\nfunction ensureFilesAre(list) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all(list.map(({ filename, contents }) => ensureFileIs(filename, contents)));\n    });\n}\nexports.ensureFilesAre = ensureFilesAre;\nfunction ensureLinkIs(target, path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const current = yield fs_1.promises.readlink(path).catch(e => {\n            if (e.code === 'ENOENT')\n                return undefined;\n            throw e;\n        });\n        if (target === current)\n            return false;\n        if (current !== undefined)\n            yield unlink(path);\n        io_1.debug('Updating symlink', path, 'to point to', target);\n        yield fs_1.promises.symlink(target, path);\n        return true;\n    });\n}\nexports.ensureLinkIs = ensureLinkIs;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verbosityLevel = exports.debug = exports.input = void 0;\nconst core_1 = require(\"@actions/core\");\nconst isGitHubAction_1 = require(\"./isGitHubAction\");\nconst util_1 = require(\"util\");\nfunction input(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!isGitHubAction_1.isGitHubAction) {\n            throw new Error('Not made to work in other environments yet!');\n            // TODO: iff not otherwise read from local config, cli arguments, or prompt the dev?\n        }\n        return core_1.getInput(name);\n    });\n}\nexports.input = input;\nfunction debug(...info) {\n    if (isGitHubAction_1.isGitHubAction) {\n        core_1.debug(util_1.formatWithOptions({ colors: true }, ...info));\n        return;\n    }\n    if (process.env.DEBUG === undefined)\n        return;\n    console.log(...info);\n}\nexports.debug = debug;\nfunction verbosityLevel() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const raw = yield input('verbosity');\n        const level = parseInt(raw);\n        if (!isFinite(level))\n            throw new Error(`Invalid verbosity: ${raw}.`);\n        if (level < 0)\n            throw new RangeError(`Invalid verbosity: ${level}. 0 is minimum.`);\n        if (level > 3)\n            throw new RangeError(`Invalid verbosity: ${level}. 3 is maximum.`);\n        return level;\n    });\n}\nexports.verbosityLevel = verbosityLevel;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupNetdata = void 0;\nconst spawn_1 = require(\"../../../utils/spawn\");\nfunction setupNetdata() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Nightly is recommended by Netdata https://docs.netdata.cloud/packaging/installer/#nightly-vs-stable-releases\n        // const installScriptNightly = 'https://my-netdata.io/kickstart.sh';\n        const installScriptStable = 'https://my-netdata.io/kickstart-static64.sh';\n        // cSpell:ignore dont\n        yield spawn_1.exec(`bash <(curl -Ss \"${installScriptStable}\") --dont-wait`);\n        // TODO: configure to work with nginx?\n    });\n}\nexports.setupNetdata = setupNetdata;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupTimezone = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst readAvenConfig_1 = require(\"./readAvenConfig\");\nfunction setupTimezone() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { runtimeServerTimezone } = yield readAvenConfig_1.readAvenConfig();\n        if (!runtimeServerTimezone)\n            return;\n        console.log('Setting timezone to:', runtimeServerTimezone);\n        const path = '/etc/localtime';\n        const next = `/usr/share/zoneinfo/${runtimeServerTimezone}`;\n        yield fs_1.ensureLinkIs(next, path);\n    });\n}\nexports.setupTimezone = setupTimezone;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupNginx = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst spawn_1 = require(\"../../utils/spawn\");\nconst aptDependencies_1 = require(\"./aptDependencies\");\nconst readAvenConfig_1 = require(\"./readAvenConfig\");\nconst io_1 = require(\"../../utils/io\");\naptDependencies_1.addAptDependencies('nginx', 'certbot', 'ssl-cert');\n// cSpell:ignore letsencrypt webroot\nconst certbotWebrootPath = '/var/lib/letsencrypt/webroot';\n// Folder containing live certs from letsencrypt\nconst letsencryptLive = '/etc/letsencrypt/live';\nconst nginxConf = `user www-data;\nworker_processes auto;\npid /run/nginx.pid;\n\ninclude modules-enabled/*.conf;\n\nevents {\n    worker_connections 768;\n    # multi_accept on;\n}\n\nhttp {\n    include conf.d/*.conf;\n}\n`;\nfunction setupNginxSnips() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dir = '/etc/nginx/snips';\n        yield fs_1.mkdir(dir);\n        const snips = {};\n        snips['force-main-https'] = `location / {\n    return 301 https://$server_name$request_uri;\n    #rewrite ^ https://$server_name$request_uri? permanent;\n}\n`;\n        snips.letsencrypt = `location ^~ /.well-known/acme-challenge/ {\n    default_type \"text/plain\";\n    root ${certbotWebrootPath};\n}\n\nlocation = /.well-known/acme-challenge/ {\n    return 404;\n}\n`;\n        // Simplified proxy headers\n        snips['proxy-forwarded-headers'] = `proxy_set_header Host $host;\nproxy_set_header Forwarded $proxy_add_forwarded;\n`;\n        // cSpell:ignore SAMEORIGIN\n        // Popular forwarded headers\n        snips['proxy-headers'] = `proxy_set_header Host $host;\n#proxy_set_header Port $server_port;\n#proxy_set_header X-Forwarded-Port $server_port;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-Proto $scheme;\n#proxy_set_header X-Forwarded-Ssl $https;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n#proxy_set_header X-Frame-Options SAMEORIGIN;\n`;\n        // Trust Cloudflare to set some headers for us\n        snips['trust-cloudflare-ip'] = `set_real_ip_from 103.21.244.0/22;\nset_real_ip_from 103.22.200.0/22;\nset_real_ip_from 103.31.4.0/22;\nset_real_ip_from 104.16.0.0/12;\nset_real_ip_from 108.162.192.0/18;\nset_real_ip_from 131.0.72.0/22;\nset_real_ip_from 141.101.64.0/18;\nset_real_ip_from 162.158.0.0/15;\nset_real_ip_from 172.64.0.0/13;\nset_real_ip_from 173.245.48.0/20;\nset_real_ip_from 188.114.96.0/20;\nset_real_ip_from 190.93.240.0/20;\nset_real_ip_from 197.234.240.0/22;\nset_real_ip_from 198.41.128.0/17;\nset_real_ip_from 2400:cb00::/32;\nset_real_ip_from 2606:4700::/32;\nset_real_ip_from 2803:f800::/32;\nset_real_ip_from 2405:b500::/32;\nset_real_ip_from 2405:8100::/32;\nset_real_ip_from 2c0f:f248::/32;\nset_real_ip_from 2a06:98c0::/29;\n\n# use any of the following two\nreal_ip_header CF-Connecting-IP;\n#real_ip_header X-Forwarded-For;\n`;\n        // cSpell:ignore websockets fastcgi\n        // Headers needed to enable Web Sockets\n        snips['websockets-proxy-headers'] = `proxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection $connection_upgrade;\n`;\n        yield Promise.all([\n            // let Ubuntu manage this one\n            fs_1.ensureLinkIs('../snippets/fastcgi-php.conf', `${dir}/fastcgi-php.conf`),\n            fs_1.ensureFilesAre(Object.entries(snips).map(([config, contents]) => ({\n                filename: `${dir}/${config}.conf`,\n                contents,\n            }))),\n        ]);\n    });\n}\n// cSpell:ignore nopush nodelay keepalive sendfile proxied\nfunction setupNginxConfigs() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dir = '/etc/nginx/conf.d';\n        const { domains } = yield readAvenConfig_1.readAvenConfig();\n        if (!domains)\n            throw new Error('Domains unset!');\n        const keys = {\n            // cSpell:ignore snakeoil\n            public: '/etc/ssl/certs/ssl-cert-snakeoil.pem',\n            private: '/etc/ssl/private/ssl-cert-snakeoil.key',\n        };\n        // Only use real certs if they exist.\n        yield fs_1.exists(`${letsencryptLive}/${domains[0]}/fullchain.pem`).then(existing => {\n            if (existing) {\n                keys.public = `${letsencryptLive}/${domains[0]}/fullchain.pem`;\n                keys.private = `${letsencryptLive}/${domains[0]}/privkey.pem`;\n            }\n        });\n        const conf = {};\n        conf.basic = `sendfile on;\ntcp_nopush on;\ntcp_nodelay on;\nkeepalive_timeout 65;\ntypes_hash_max_size 2048;\n# server_tokens off;\n\n# server_names_hash_bucket_size 64;\n# server_name_in_redirect off;\n\ninclude /etc/nginx/mime.types;\ndefault_type application/octet-stream;\n`;\n        conf.gzip = `gzip on;\ngzip_disable \"msie6\";\n\n# gzip_vary on;\n# gzip_proxied any;\n# gzip_comp_level 6;\n# gzip_buffers 16 8k;\n# gzip_http_version 1.1;\n# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n`;\n        // Allow upgrading http connections. Required for Websockets.\n        conf['http-upgrade'] = `map $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n}\n`;\n        // Where should we log to\n        conf.logging = `access_log /var/log/nginx/access.log;\nerror_log /var/log/nginx/error.log;\n`;\n        const validForwardedHeaderPattern = '\"~^(,[ \\\\\\\\t]*)*([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?(;([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?)*([ \\\\\\\\t]*,([ \\\\\\\\t]*([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?(;([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?)*)?)*$\"\\n';\n        //\n        conf['proxy-add-forwarded'] = `map $remote_addr $proxy_forwarded_elem {\n    # IPv4 addresses can be sent as-is\n    ~^[0-9.]+$          \"for=$remote_addr\";\n\n    # IPv6 addresses need to be bracketed and quoted\n    ~^[0-9A-Fa-f:.]+$   \"for=\\\\\"[$remote_addr]\\\\\"\";\n\n    # Unix domain socket names cannot be represented in RFC 7239 syntax\n    default             \"for=unknown\";\n}\n\nmap $http_forwarded $proxy_add_forwarded {\n    # If the incoming Forwarded header is syntactically valid, append to it\n    ${validForwardedHeaderPattern} \"$http_forwarded, $proxy_forwarded_elem\";\n\n    # Otherwise, replace it\n    default \"$proxy_forwarded_elem\";\n}\n`;\n        // List of nginx server blocks (in files)\n        conf.servers = `include servers/*.conf;\n`;\n        // Default SSL configurations.\n        conf.ssl = `##\n# SSL Settings\n##\n\n# Default keys. Overridden in server configs.\nssl_certificate     ${keys.public};\nssl_certificate_key ${keys.private};\n\n\nssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\nssl_prefer_server_ciphers on;\n`;\n        yield fs_1.mkdir(dir).then(() => fs_1.ensureFilesAre(Object.entries(conf).map(([config, contents]) => ({\n            filename: `${dir}/${config}.conf`,\n            contents,\n        }))));\n    });\n}\nfunction setupNginxBasicServers() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dir = '/etc/nginx/servers';\n        yield fs_1.mkdir(dir);\n        const serverConfigDefault = `server {\n      listen 80;\n      listen [::]:80;\n      listen 443 ssl;\n      listen [::]:443 ssl;\n  \n      include snips/letsencrypt.conf;\n  \n      location / {\n          default_type text/plain;\n          return 200 'Nothing to see here...';\n      }\n  }\n  `;\n        yield fs_1.ensureFileIs(`${dir}/00_default.conf`, serverConfigDefault);\n    });\n}\nfunction setupNginxServersFull() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { webRootPath, domains, service: { name: serviceName }, } = yield readAvenConfig_1.readAvenConfig();\n        if (!domains)\n            throw new Error('Domains unset!');\n        if (webRootPath)\n            yield fs_1.mkdir(webRootPath);\n        const upstreamUniqueName = domains[0].replace('.', '_');\n        // Name of the socket file used for communications with\n        const socketFilename = 'sock';\n        // Directory the daemon runs in\n        const workingDir = `/run/${serviceName}`;\n        // Nginx backend location\n        const upstreamHost = `unix:${workingDir}/${socketFilename}`;\n        const serverConfig = `server {\n    server_name ${domains.join(' ')};\n    listen 80 default_server;\n    listen [::]:80 default_server;\n\n    include snips/letsencrypt.conf;\n    include snips/force-main-https.conf;\n}\n\nserver {\n    server_name ${domains.join(' ')};\n    listen 443 ssl default_server;\n    listen [::]:443 ssl default_server;\n\n    ssl_certificate     ${letsencryptLive}/${domains[0]}/fullchain.pem;\n    ssl_certificate_key ${letsencryptLive}/${domains[0]}/privkey.pem;\n\n    include snips/trust-cloudflare-ip.conf;\n\n    location / ${!webRootPath\n            ? ''\n            : `{\n      root ${webRootPath};\n      # If files exist in root, serve them. Otherwise fallback to proxy.\n      try_files $uri $uri/index.html @proxyHandler;\n    }\n    \n    location @proxyHandler `}{\n        include snips/websockets-proxy-headers.conf;\n        include snips/proxy-headers.conf;\n        proxy_pass http://${upstreamUniqueName};\n    }\n}\n\nupstream ${upstreamUniqueName} {\n    server ${upstreamHost} fail_timeout=0;\n}\n`;\n        yield fs_1.ensureFileIs(`/etc/nginx/servers/${domains[0]}.conf`, serverConfig);\n    });\n}\nconst nginxConfigFile = '/etc/nginx/nginx.conf';\nfunction setupNginxBasic() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n            fs_1.ensureFileIs(nginxConfigFile, nginxConf),\n            setupNginxSnips(),\n            setupNginxConfigs(),\n            setupNginxBasicServers(),\n        ]);\n    });\n}\n// cSpell:ignore logrotate logrotation\nconst certbotCliConfig = `authenticator = webroot\nwebroot-path = ${certbotWebrootPath}\n\n# Because we are using logrotate for greater flexibility, disable the\n# internal certbot logrotation.\nmax-log-backups = 0\n`;\nconst certbotPostRenewNginx = `#!/bin/bash\nsystemctl reload nginx\n`;\n// cSpell:ignore YOURDOMAIN privkey fullchain noninteractive\nfunction setupCertbot() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domains } = yield readAvenConfig_1.readAvenConfig();\n        if (!domains)\n            throw new Error('Domains unset!');\n        yield Promise.all([\n            fs_1.ensureFileIs('/etc/letsencrypt/cli.ini', certbotCliConfig),\n            fs_1.mkdir(certbotWebrootPath),\n        ]);\n        /**\n         * Use this for other services that depend on generated keys but require them combined. Like ZNC.\n         */\n        const outputFile = '/var/lib/znc/znc.pem';\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const certbotPostRenewExampleFullChain = `#!/bin/bash\nYOURDOMAIN=\"${domains[0]}\"\n\n[[ $RENEWED_LINEAGE != \"${letsencryptLive}/$YOURDOMAIN\" ]] && exit 0\n\n# Combine certs into single file for some applications that don't support separation\ncat ${letsencryptLive}/$YOURDOMAIN/{privkey,fullchain}.pem > ${outputFile}\n`;\n        // TODO: Support multiple independent domains that serve different websites.\n        function doCertbot() {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!domains)\n                    throw new Error('Domains unset!');\n                // Run once for each nginx server. Generates one key pair. Must include all domains that share server.\n                yield spawn_1.spawn('certbot', \n                // cSpell:ignore certonly\n                'certonly', '--expand', '--noninteractive', '--agree-tos', \n                // Registered e-mail\n                '-m', \n                // TODO: use better email\n                `admin@${domains[0]}`, \n                // Add a \"--domain\" before each domain\n                ...domains.reduce((res, current) => res.concat('--domain', current), []));\n            });\n        }\n        yield doCertbot().catch(() => __awaiter(this, void 0, void 0, function* () {\n            // Sometimes, certbot is running on the runtime server (because of automatic certificate renewal with Systemd timer)\n            // When that happens, the executable fails. So, let's just wait 15 seconds and try again.\n            // If it fails *again*, for developer to manually re-run to fix.\n            // TODO: test if correct error code\n            yield new Promise(resolve => setTimeout(resolve, 15e3));\n            return doCertbot();\n        }));\n        // Running certbot creates the renewal folders we need\n        const hook = '/etc/letsencrypt/renewal-hooks/deploy/reload-nginx';\n        yield fs_1.ensureFileIs(hook, certbotPostRenewNginx);\n        yield fs_1.chmod(hook, 0o755);\n    });\n}\nfunction checkNginxConfig() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield spawn_1.spawn('nginx', '-tc', nginxConfigFile);\n    });\n}\nfunction setupNginx() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domains } = yield readAvenConfig_1.readAvenConfig();\n        if (!domains)\n            return;\n        // Ensure Let's Encrypt configuration is setup\n        yield setupNginxBasic();\n        yield checkNginxConfig().catch(() => __awaiter(this, void 0, void 0, function* () {\n            io_1.debug('Something went wrong. Clearing possibly broken configs and trying again.');\n            // TODO: Only clear out failing configs\n            yield Promise.all(domains.map(domain => fs_1.unlink(`/etc/nginx/servers/${domain}.conf`).catch(() => {\n                // function intentionally empty\n            })));\n            yield checkNginxConfig();\n            // If we fail again here, we've got bigger problems.\n        }));\n        yield spawn_1.exec(`systemctl reload nginx.service`);\n        // Before trying to get possibly new keys\n        yield setupCertbot();\n        // Only then do we make sure the rest of the server files are setup\n        yield setupNginxServersFull();\n        yield checkNginxConfig();\n        yield spawn_1.exec(`systemctl reload nginx.service`);\n    });\n}\nexports.setupNginx = setupNginx;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupJournalbeat = void 0;\nconst fs_1 = require(\"../../../utils/fs\");\nconst spawn_1 = require(\"../../../utils/spawn\");\nconst readAvenConfig_1 = require(\"../readAvenConfig\");\nfunction setupJournalbeat() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { journalbeat } = yield readAvenConfig_1.readAvenConfig();\n        if (!journalbeat)\n            return;\n        yield spawn_1.exec('wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -');\n        // Replace list every time\n        yield fs_1.ensureFileIs('/etc/apt/sources.list.d/elastic-7.x.list', 'deb https://artifacts.elastic.co/packages/7.x/apt stable main\\n');\n        yield spawn_1.exec('apt-get update');\n        yield spawn_1.exec('apt-get install -y journalbeat');\n        // TODO: Add to list of apt\n        yield spawn_1.exec('systemctl enable journalbeat');\n        const disableLogging = `\n[Service]\nEnvironment=\"BEAT_LOG_OPTS= \"\n`;\n        const reload = fs_1.mkdir('/lib/systemd/system/journalbeat.service.d')\n            .then(() => fs_1.ensureFileIs('/lib/systemd/system/journalbeat.service.d/disable-logging.conf', disableLogging))\n            .then(() => spawn_1.exec('systemctl daemon-reload'));\n        let journalbeatConfig = `journalbeat.inputs:\n- paths: []\n  #backoff: 1s\n  #max_backoff: 20s\n  seek: cursor\n  #cursor_seek_fallback: head\n  #include_matches: []\n  #fields:\n\n#journalbeat:\n  #registry_file: registry\n\nsetup.template.settings:\n  index.number_of_shards: 1\n  #index.codec: best_compression\n  #_source.enabled: false\n\n#name:\n#tags: [\"service-X\", \"web-tier\"]\n#fields:\n\n#setup.dashboards.enabled: false\n#setup.dashboards.url:\n\nprocessors:\n  - add_host_metadata: ~\n  - add_cloud_metadata: ~  \n  - decode_json_fields:\n      fields: [\"message\"]\n      process_array: true\n      max_depth: 8\n      target: \"\"\n\n#logging.level: debug\n#logging.selectors: [\"*\"]\n\n#monitoring.enabled: false\n#monitoring.cluster_uuid:\n#monitoring.elasticsearch:\n\n#migration.6_to_7.enabled: true\n`;\n        if (journalbeat.kibanaHost) {\n            journalbeatConfig += `\nsetup.kibana:\n  host: \"${journalbeat.kibanaHost}\"\n`;\n        }\n        let configured = 0;\n        if (journalbeat.elastic.hosts.length) {\n            configured++;\n            journalbeatConfig += `\noutput.elasticsearch:\n  hosts: ${JSON.stringify(journalbeat.elastic.hosts)}\n  #protocol: \"https\"\n  username: ${JSON.stringify(journalbeat.elastic.username)}\n  password: ${JSON.stringify(journalbeat.elastic.password)}\n`;\n        }\n        if (journalbeat.logstashHosts.length) {\n            if (configured) {\n                console.log('Skipping logstash config in favor of elasticsearch');\n            }\n            else {\n                configured++;\n                journalbeatConfig += `\noutput.logstash:\n  hosts: ${JSON.stringify(journalbeat.logstashHosts)}\n  #ssl.certificate_authorities: [\"/etc/pki/root/ca.pem\"]\n  #ssl.certificate: \"/etc/pki/client/cert.pem\"\n  #ssl.key: \"/etc/pki/client/cert.key\"\n`;\n            }\n        }\n        if (!configured)\n            console.log('Warning: No journalbeat outputs configured');\n        const change = yield fs_1.ensureFileIs('/etc/journalbeat/journalbeat.yml', journalbeatConfig);\n        yield reload;\n        yield spawn_1.exec(`systemctl ${change ? 'restart' : 'start'} journalbeat`);\n    });\n}\nexports.setupJournalbeat = setupJournalbeat;\n","module.exports = require(\"os\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepare = void 0;\nconst Nginx_1 = require(\"./setup/Nginx\");\nconst MainServiceFiles_1 = require(\"./setup/MainServiceFiles\");\nconst MonitoringTools_1 = require(\"./setup/MonitoringTools\");\n// import { setupDevTools } from './setup/DeveloperTools';\nconst basicServer_1 = require(\"./setup/basicServer\");\nconst printOSInfo_1 = require(\"../utils/printOSInfo\");\nfunction prepare() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Initial smoke test\n        yield printOSInfo_1.printOSInfo();\n        yield basicServer_1.basicServerSetup();\n        yield Promise.all([\n            MonitoringTools_1.setupMonitoringTools(),\n            // setupDevTools(),\n            Nginx_1.setupNginx(),\n            MainServiceFiles_1.setupMainServiceFiles(),\n        ]);\n        console.log('Server configured!');\n    });\n}\nexports.prepare = prepare;\nif (!module.parent) {\n    prepare().catch(e => {\n        console.log('Error running!');\n        console.log(e);\n        process.exitCode = 1;\n    });\n}\n","module.exports = require(\"child_process\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupMonitoringTools = void 0;\nconst Journalbeat_1 = require(\"./MonitorTools/Journalbeat\");\nconst Netdata_1 = require(\"./MonitorTools/Netdata\");\nconst Cockpit_1 = require(\"./MonitorTools/Cockpit\");\nconst FailureNotificationServices_1 = require(\"./MonitorTools/FailureNotificationServices\");\nconst PersistentJournal_1 = require(\"./MonitorTools/PersistentJournal\");\nfunction setupMonitoringTools() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n            Journalbeat_1.setupJournalbeat(),\n            Netdata_1.setupNetdata(),\n            Cockpit_1.setupCockpit(),\n            FailureNotificationServices_1.setupFailureNotificationService(),\n            PersistentJournal_1.setupPersistentJournal(),\n        ]);\n    });\n}\nexports.setupMonitoringTools = setupMonitoringTools;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupFailureNotificationService = void 0;\nfunction setupFailureNotificationService() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Fill out\n        // Ruby Service\n        // https://github.com/joonty/systemd_mon\n        // Manually with Systemd\n        // https://serverfault.com/questions/694818/get-notification-when-systemd-monitored-service-enters-failed-state\n    });\n}\nexports.setupFailureNotificationService = setupFailureNotificationService;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupAptDependencies = exports.addAptDependencies = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst spawn_1 = require(\"../../utils/spawn\");\nconst readAvenConfig_1 = require(\"./readAvenConfig\");\nconst deps = [];\n// List of apt dependencies needed by various parts\nfunction addAptDependencies(...dependencies) {\n    deps.push(...dependencies);\n}\nexports.addAptDependencies = addAptDependencies;\nfunction setupAptDependencies() {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Don't assume yarn\n        yield spawn_1.exec('curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -');\n        yield fs_1.ensureFileIs('/etc/apt/sources.list.d/yarn.list', 'deb https://dl.yarnpkg.com/debian/ stable main');\n        addAptDependencies('yarn');\n        yield spawn_1.spawn('apt-get', 'update');\n        yield spawn_1.spawn('apt-get', 'upgrade', '-y');\n        const config = yield readAvenConfig_1.readAvenConfig();\n        addAptDependencies(...((_a = config.aptDependencies) !== null && _a !== void 0 ? _a : []));\n        addAptDependencies(...((_b = config.runtimeAptDependencies) !== null && _b !== void 0 ? _b : []));\n        // cSpell:ignore noninteractive autoremove confnew confdef confold dpkg\n        const useNew = true;\n        const dpkgForceConfOptions = useNew\n            ? 'force-confnew'\n            : 'force-confdef\\nforce-confold';\n        yield fs_1.ensureFileIs('/etc/dpkg/dpkg.cfg.d/force-conf.cfg', `${dpkgForceConfOptions}\\n`);\n        yield spawn_1.spawn('apt-get', \n        // Avoid all interactive prompts https://serverfault.com/questions/227190\n        {\n            stdio: 'inherit',\n            env: Object.assign(Object.assign({}, process.env), { DEBIAN_FRONTEND: 'noninteractive' }),\n        }, 'install', '-yq', ...new Set(deps));\n        yield spawn_1.spawn('apt-get', 'autoremove', '-y');\n    });\n}\nexports.setupAptDependencies = setupAptDependencies;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupPersistentJournal = void 0;\nconst fs_1 = require(\"../../../utils/fs\");\nfunction setupPersistentJournal() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield fs_1.mkdir('/var/log/journal');\n    });\n}\nexports.setupPersistentJournal = setupPersistentJournal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printOSInfo = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nfunction printOSInfo() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const release = (yield readFile('/etc/lsb-release')).toString();\n        // cSpell:ignore DISTRIB\n        /**\n         * Sample /etc/lsb-release:\n         * DISTRIB_ID=Ubuntu\n         * DISTRIB_RELEASE=18.04\n         * DISTRIB_CODENAME=bionic\n         * DISTRIB_DESCRIPTION=\"Ubuntu 18.04.3 LTS\".\n         */\n        // Dirty get OS version\n        const osVersion = release.split('\\n')[3].split('=')[1].split('\"')[1];\n        console.log('OS Version', osVersion);\n    });\n}\nexports.printOSInfo = printOSInfo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exec = exports.spawn = void 0;\nconst child_process_1 = require(\"child_process\");\nconst util_1 = require(\"util\");\nconst io_1 = require(\"./io\");\nconst defaultShell = '/bin/bash';\nfunction spawn(command, first, ...args) {\n    const defOpts = { stdio: 'inherit' };\n    let opts;\n    if (typeof first === 'string') {\n        args.unshift(first);\n        opts = defOpts;\n    }\n    else {\n        if (first === true) {\n            opts = Object.assign(Object.assign({}, defOpts), { shell: defaultShell });\n        }\n        else {\n            opts = Object.assign(Object.assign({}, defOpts), first);\n        }\n    }\n    io_1.debug('Spawning', command, args);\n    const proc = child_process_1.spawn(command, args, opts);\n    const ret = new Promise((resolve, reject) => {\n        proc.on('exit', exitCode => {\n            if (exitCode) {\n                const e = new Error(`Exit code: ${exitCode}`);\n                e.exitCode = exitCode;\n                reject(e);\n            }\n            else {\n                resolve();\n            }\n        });\n    });\n    ret.child = proc;\n    return ret;\n}\nexports.spawn = spawn;\nconst execP = util_1.promisify(child_process_1.exec);\n/**\n * Run a command and capture output.\n *\n * Prints nothing.\n *\n * - Shell\n * - Captured & Buffered output\n * - Promised result.\n *\n * @param {string} command - The command to run.\n * @param {true|string} shell - Should we use a shell. Default true.\n * @returns {ChildProcess} The child.\n */\nfunction exec(command, shell = true) {\n    io_1.debug('Exec:', command);\n    if (shell === null) {\n        return execP(command);\n    }\n    if (shell === true)\n        shell = defaultShell;\n    return execP(command, { shell });\n}\nexports.exec = exec;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupSecurity = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst spawn_1 = require(\"../../utils/spawn\");\nfunction setupSecurity() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Disable password authentication on sshd\n        const changed = yield fs_1.ensureFileContains('/etc/ssh/sshd_config', '\\nPasswordAuthentication no\\n');\n        if (changed) {\n            yield spawn_1.exec('systemctl reload sshd');\n        }\n    });\n}\nexports.setupSecurity = setupSecurity;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.basicServerSetup = void 0;\nconst Timezone_1 = require(\"./Timezone\");\nconst aptDependencies_1 = require(\"./aptDependencies\");\nconst Security_1 = require(\"./Security\");\nconst readAvenConfig_1 = require(\"./readAvenConfig\");\nconst Root_1 = require(\"./Root\");\nfunction basicServerSetup() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n            Security_1.setupSecurity(),\n            readAvenConfig_1.readAvenConfig()\n                .then(c => c.authorizedKeys)\n                .then((keys) => __awaiter(this, void 0, void 0, function* () {\n                if (keys.length)\n                    return Root_1.setAuthorizedKeys('root', keys);\n            })),\n            Timezone_1.setupTimezone(),\n        ]);\n        yield aptDependencies_1.setupAptDependencies();\n    });\n}\nexports.basicServerSetup = basicServerSetup;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\nfunction escapeData(s) {\n    return toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupMainServiceFiles = void 0;\nconst spawn_1 = require(\"../../utils/spawn\");\nconst fs_1 = require(\"../../utils/fs\");\nconst readAvenConfig_1 = require(\"./readAvenConfig\");\nfunction setupMainServiceFiles() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const { service } = yield readAvenConfig_1.readAvenConfig();\n        const serviceName = service.name;\n        const serviceDescription = (_a = service.description) !== null && _a !== void 0 ? _a : 'Runtime server';\n        const startServerCommand = service.startServerCommand;\n        const extraService = service.extraConfigs;\n        const serviceFile = `/etc/systemd/system/${serviceName}.service`;\n        const HomeDir = `/var/lib/${serviceName}`;\n        const runtimeUser = 'www-data';\n        const runtimeUid = spawn_1.exec(`id -u ${runtimeUser}`);\n        const runtimeGid = spawn_1.exec(`id -g ${runtimeUser}`);\n        const dir1 = fs_1.mkdir(`${serviceFile}.d`);\n        const dir2 = fs_1.mkdir(`/opt/aven`);\n        const dir3 = fs_1.mkdir(HomeDir).then(() => __awaiter(this, void 0, void 0, function* () {\n            return yield Promise.all([\n                fs_1.chmod(HomeDir, 0o700),\n                fs_1.chown(HomeDir, Number((yield runtimeUid).stdout), Number((yield runtimeGid).stdout)),\n            ]);\n        }));\n        const serviceFileContents = `[Unit]\nDescription=${serviceDescription}\nAfter=network.target\n\n[Service]\nType=simple\nRestart=always\nEnvironment=LISTEN_PATH=\"/run/${serviceName}/sock\"\nRuntimeDirectory=${serviceName}\nWorkingDirectory=/opt/aven/${serviceName}\nExecStart=${startServerCommand}\nEnvironment=HOME=\"${HomeDir}\"\nUser=${runtimeUser}\n${extraService ? `\\n# Extra configs\\n${extraService}\\n` : '\\n'}\n[Install]\nWantedBy=default.target\n`;\n        yield fs_1.ensureFileIs(serviceFile, serviceFileContents);\n        // Tell systemd to read our changes\n        yield spawn_1.exec(`systemctl daemon-reload`);\n        // Run service on server boot\n        if (service.enable)\n            yield spawn_1.exec(`systemctl enable ${serviceName}.service`);\n        yield Promise.all([dir1, dir2, dir3]);\n    });\n}\nexports.setupMainServiceFiles = setupMainServiceFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readAvenConfig = void 0;\nconst io_1 = require(\"../../utils/io\");\nlet done;\nlet error;\nconst config = new Promise((resolve, reject) => {\n    done = resolve;\n    error = reject;\n});\nlet data = '';\nprocess.stdin.on('data', d => {\n    data += d;\n});\nconst timeout = setTimeout(() => {\n    error(new Error('Timeout reading json input'));\n}, 1000);\nprocess.stdin.on('end', () => {\n    clearTimeout(timeout);\n    const parsed = JSON.parse(data);\n    io_1.debug('Using aven config:', parsed);\n    // TODO: Sanitize object?\n    done(parsed);\n});\nfunction readAvenConfig() {\n    return config;\n}\nexports.readAvenConfig = readAvenConfig;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = command_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    command_1.issueCommand('add-path', {}, inputPath);\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","module.exports = require(\"path\");","module.exports = require(\"util\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupRoot = exports.setAuthorizedKeys = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst User_1 = require(\"../../utils/User\");\nconst path_1 = require(\"path\");\nfunction setAuthorizedKeys(user, keys) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const userDir = yield User_1.userHome(user);\n        const sshConfDir = path_1.join(userDir, '.ssh');\n        yield fs_1.mkdir(sshConfDir);\n        yield fs_1.ensureFileIs(path_1.join(sshConfDir, 'authorized_keys'), [...keys, ''].join('\\n'));\n    });\n}\nexports.setAuthorizedKeys = setAuthorizedKeys;\n/**\n * Configure root user settings.\n *\n * @param {string[]} sources - List of URLs to load developer keys from.\n */\nfunction setupRoot(sources) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const userDir = yield User_1.userHome('root');\n        const sshConfDir = path_1.join(userDir, '.ssh');\n        yield fs_1.mkdir(sshConfDir);\n        if (!sources)\n            sources = [];\n        yield Promise.all([\n            // Make it easy for root user to clone from github\n            User_1.fixKnownHosts(userDir),\n            setAuthorizedKeys('root', sources !== null && sources !== void 0 ? sources : []),\n        ]);\n    });\n}\nexports.setupRoot = setupRoot;\n","module.exports = require(\"fs\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixKnownHosts = exports.ensureKey = exports.createAndConfigureUser = exports.userHome = void 0;\nconst path_1 = require(\"path\");\nconst fs_1 = require(\"./fs\");\nconst spawn_1 = require(\"./spawn\");\nconst userGroups = ['sudo', 'adm', 'systemd-journal'];\nconst UsernameInUseUserAddExitValue = 9;\nfunction userHome(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Read from os\n        return name === 'root' ? '/root' : `/home/${name}`;\n    });\n}\nexports.userHome = userHome;\n/**\n * Create a new user and setup home dir.\n *\n * @param {string} name - Username to make.\n */\nfunction createAndConfigureUser(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const command = [];\n        // cSpell:ignore useradd\n        command.push('useradd');\n        // Don't use a group with same name as user (use \"users\" instead)\n        command.push('--no-user-group');\n        command.push('--gid', 'users');\n        command.push('--shell', '/bin/bash');\n        // Create home directory for user\n        command.push('--create-home');\n        // Default list of groups\n        command.push('--groups', userGroups.join(','));\n        // Username we're making\n        command.push(name);\n        yield spawn_1.exec(command.join(' ')).catch(e => {\n            if (e.code !== UsernameInUseUserAddExitValue)\n                throw e;\n            console.log(`User ${name} exists`);\n            // cSpell:ignore usermod\n            // TODO: `usermod` to make sure user options are consistent (in case they change)\n        });\n        const home = yield userHome(name);\n        yield fs_1.mkdir(`${home}/.ssh`);\n        yield fixKnownHosts(home);\n    });\n}\nexports.createAndConfigureUser = createAndConfigureUser;\nfunction ensureKey(user, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield fs_1.ensureFileContains(`${yield userHome(user)}/.ssh/authorized_keys`, key);\n    });\n}\nexports.ensureKey = ensureKey;\nconst GitHubKnownHosts = 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==';\nfunction fixKnownHosts(userDir) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return fs_1.ensureFileContains(path_1.join(userDir, '.ssh', 'known_hosts'), GitHubKnownHosts);\n    });\n}\nexports.fixKnownHosts = fixKnownHosts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isGitHubAction = void 0;\nexports.isGitHubAction = process.env.GITHUB_ACTIONS === 'true' ||\n    process.argv.includes('--gh-actions');\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupCockpit = void 0;\nconst aptDependencies_1 = require(\"../aptDependencies\");\naptDependencies_1.addAptDependencies('cockpit');\nfunction setupCockpit() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Setup user password\n        // TODO: configure to work with nginx?\n    });\n}\nexports.setupCockpit = setupCockpit;\n","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'loaded', {\n\t\tenumerable: true,\n\t\tget: function() { return module.l; }\n\t});\n\tObject.defineProperty(module, 'id', {\n\t\tenumerable: true,\n\t\tget: function() { return module.i; }\n\t});\n\treturn module;\n};"]}